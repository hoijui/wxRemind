#!/usr/bin/env python

import sys, os
cwd = os.getcwd()
wxremalert = os.path.join(cwd, 'wxremalert')
wxremalert_in_cwd = os.path.isfile(wxremalert)

if not wxremalert_in_cwd:
    print """
Error: INSTALL must be run from the wxRemind root directory."""
    sys.exit()


def make_links():
    path = os.getenv('PATH').split(os.pathsep)
    pathlist = []
    for i in range(len(path)):
        if os.access(path[i], os.R_OK | os.W_OK | os.X_OK):
            pathlist.append(" OK %s: %s" % (i, path[i]))
        else:
            pathlist.append("    %s: %s" % (i, path[i]))
    if len(pathlist) > 0:
        pathstr = "\n".join(pathlist)
    else:
        pathstr = """\
    Error. Could not identify any directories in your system path. You will
    need either to correct this problem or to choose not to use links.
"""

    print """
                ===============================
                     wxRemind Installation
                ===============================

It is possible to execute the scripts wxremind, wxremalert, wxremdata and
wxremsetup by entering the complete path to the script, e.g.

REM 26 May 2006 AT 10:30 RUN \\
        %s %%"Hello world%%" %%1%%

It is much more convenient, however, to create symbolic links from the scripts
to a directory in your executable path and then to use just the script name:

REM 26 May 2006 AT 10:30 RUN wxremalert %%"Hello world%%" %%1%%

Here are the directories in your system path with the ones in which you could
create symbolic links indicated by 'OK':

%s

Enter the number of the directory you would like to use to have these links
created for you (strongly recommended), or enter an empty response to avoid
creating these links. 
""" % (wxremalert, pathstr)

    response = raw_input("Number of directory to use for links? ")

    if response and response != '':
        dstnum = int(response)
        if dstnum in range(len(path)):
            target = path[int(dstnum)]
        else:
            target = ''
    else:
        target = ''

    if target:
        print """
Creating symbolic links in %s ...""" % target

        if not os.access(target, os.F_OK):
            print """
Error: %s does not exist. Either create this directory or use an existing
directory.""" % target
            sys.exit(0)

        if not os.access(target, os.R_OK | os.W_OK | os.X_OK):
            print """
Error: You do not have permission to create links in %s
Please start over with a directory in which you can create symbolic links.
""" % target
            sys.exit(0)

        try:
            for file in ['wxremalert', 'wxremdata', 'wxremind', 'wxremsetup']:
                src = os.path.join(cwd, file)
                dst = os.path.join(target, file)
                try:
                    os.remove(dst)
                    print "Removed existing link %s" % dst 
                except:
                    pass
                os.symlink(src, dst)
                if os.access(dst,os.X_OK):
                    print "Created symbolic link %s" % dst
                else:
                    print """
                    Error: %s is not executable.
                    """ % dst
                    raise OSError
        except:
            print """
Error: Failed to create the necessary symbolic links in %s

You will need either to create these links manually or to use the complete
path to execute a script.""" % target
    else:
        print """
Symbolic link creation cancelled.
"""

from wxRemind.wxRemSetup import setup
make_links()
setup()

